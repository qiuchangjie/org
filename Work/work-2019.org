* 飞车2

** 升级Unity2018.3问题记录
+ unity 2018.3 android 勾选GPU Skinning 报错 原因：unity2018.3的bug
+ unity 2018.3 android 报错 Unexpected Crunch texture format 原因：主场景的贴图使用了Crunched压缩算法的ETC图片

** 使用IL2CPP打包方式
+ unity使用了IL2CPP打android包，存在内存对齐，我们协议使用ulong长度解密导致抛异常，最后解决办法是改为使用char长度解密；
  + Linux操作系统会对于 非对齐内存访问的进程，发送SIGBUS的信号，你的程序，接收到这个信号后，进行coredump，并退出了。
  + Windows操作系统允许 非地址对齐的内存访问（会损失性能），所以程序在Windows操作系统下，不会出现error。
  + Win32平台下的微软VC编译器在默认情况下采用如下的对齐规则: 任何基本数据类型T的对齐模数就是T的大小，即sizeof(T)。比如对于double类型(8字节)，就要求该类型数据的地址总是8的倍数，而char类型数据(1字节)则可以从任何一个地址开始。Linux下的GCC奉行的是另外一套规则:任何2字节大小(包括单字节吗?)的数据类型(比如short)的对齐模数是2，而其它所有超过2字节的数据类型(比如long,double)都以4为对齐模数。


