#+TITLE: 2020 Week Report

* 2020-6-29 To 2020-7-4 Week Report

本周工作：
1. 开发无人炸弹飞机技能，功能已经开发完成，策划也验收过效果，后续有优化需求再进
   一步优化效果。[进度：100%]
2. 开发角色行走，摄像机跟随目标对象的功能，AI做预瞄准功能需要用到。[进度：100%]
3. 继续完善C#编码规范文档，规范代码风格，让代码看起来整洁统一。[进度：100%]
4. 编写Lua编码规范文档，统一Lua编码风格，按照以前的编码习惯写了1.0版本文档，后续有
   需要再继续完善补充。[进度：100%]
5. 整理工程代码，使用Unity的程序集定义功能。[进度：100%]

下周工作：
1. 开发AI行为树判断弹药数量功能。
2. 开发AI行为树装备弹药功能。
3. 整理重构战斗中的一些底层逻辑。
4. 帮忙解决组员遇到的技术问题。

本周心流：
1. 在整理工程时我打算把底层比较独立的代码使用Unity程序集定义，这样在修改代码的时
   候能提高编译速度，我发现我们同学写的一些代码相互调用关系不是很合理，上层的代
   码和底层的代码相互依赖调用， 本来底层的代码可以独立定义一个程序集，相互调用后
   就无法定义程序集，因为依赖了一些上层代码的类。我们把一些代码做了重构，使用事
   件通知的方式对一些类进行解耦。
2. 有位同学在开发战斗UI的时候，UI的消息回调没有被调用，他查消息系统代码，发现消
   息系统是通过弱引用的方式保存回调的，被GC后就回调对象就被回收了，他认为底层用
   弱引用是不合理的，想改掉，我认为底层用弱引用是相对更安全的做法，因为使用弱引
   用保存回调，即使监听回调忘记做手动移除了，消息系统也不会持有对象引用，回调对
   象的销毁不受消息系统影响，所以这样是降低了内存泄漏概率。

* 2020-7-6 To 2020-7-10 Week Report

本周工作：
1. 重构整理UFPS插件的事件。 【进度：100%】
2. 为美术同学制作调美术效果的环境。 【进度：100%】
3. 定位并解决取消瞄准后摄像机FOV无法还原的Bug。 【进度：100%】
4. 定位并解决无人机道具无法释放的Bug。 【进度：100%】
5. 定位并解决角色视野检测有误的Bug，因为检测的前方是使用了角色身体模型，应该用摄
   像机的前方方向检测。 【进度：100%】
6. 重构整理UFPS插件的代码，把继承State的状态类的逻辑和数据分离。(类比较多，是个
   漫长的过程) 【进度：30%】

下周工作：
1. 定位并解决目前发现的AI行为树的Bug。
2. 继续重构整理UFPS插件的代码，把继承State的状态类的逻辑和数据分离。
3. 帮忙解决组员遇到的技术问题。

本周心流：
1. 这周开始，计划逐步对UFPS进行重构调整，代码改动可能比较大，为了不影响demo功能
   的正常开发， 我开了一个分支来进行重构，等调整得差不多了，就把代码合并到demo主
   干上。
2. UFPS插件中的事件没有分类和集中声明，在查找代码引用的时候会比较麻烦，因此我对
   UFPS插件的事件进行了分类整理，把调用的代码也做了些调整修改。吐槽一下：这个
   插件的事件真多，内部运作的事件就有160多个。-_-!
3. UFPS插件的配置大量依赖了Unity的预制preset，preset中配置了要修改的对象的属性名
   和值，在运行中通过反射的方式修改对象的属性，这种方式很灵活，但是我们担心这种
   方式在性能上会有问题，也为了日后项目中可以用配表的方式配置，我们打算重构这一
   块，要对State类做改造，继承State的类也都要改，工作量大大的。=_=!
4. 这周美术同学想调优一些美术效果，发现工程里面的缺少一个稳定的场景给他们调效果，
   导致他们无法比较顺利地调优，接到他们的反馈后，程序这边尽快给他们整理了一个环
   境给他们调整效果，最后效果及时的加到了战斗中。
5. 在查Bug的时候，在开发过程中，有些同学的工作可能会依赖能正常跑起来的功能，因此我们在开发功能
   时Commit到svn上的代码、配置等资源时要细心检查，尽量保证提交到svn上的功能是正
   常能跑的，尽量做到不要报错卡流程。

* 2020-7-13 To 2020-7-17 Week Report

本周工作：
1. 在分支上整理重构UFPS事件，区分内部事件、外部事件、UI事件三类，并且合并到主干
   上。 【进度：100%】
2. 定位和解决AI行为树无法刷新路径点问题。 【进度：100%】
3. 反编译Behavior Designer插件代码。 【进度：100%】
4. 重构State的参数配置，重新写一个统一配置参数的类代替插件中的反射机制。 【进度：
   40%】
5. 编写UFPS的配置参数的编辑器工具（参数类重新写了，所以编辑器也要重新写）。 【进度：20%】
6. 重构UFPS的底层，去掉一些复杂逻辑，涉及的代码有点多。 【进度：20%】

下周工作：
1. 重构State的参数配置，各个State的子类的参数读取部分都要调整。
2. 编写UFPS各个类的配置参数的编辑器工具。
3. 重构UFPS的底层，去掉一些复杂逻辑。
4. 帮忙解决组员遇到的技术问题。

本周心流：
1. 我们项目中的行为树用了Unity的Behavior Designer插件，这个插件在unity上比较成熟，在
   unity上使用也比较方便，目前发现最大的问题是没有源码，万一后面想要自己加一些功能或
   者修复一些Bug的时候就很不方便了。为了方便日后项目维护和扩展，我用dnSpy工具对
   插件dll进行反编译。dnSpy工具虽然很强大，但是反编译处理的代码并不是直接能用的，
   有比较多的报错，我花了不少时间对报错的代码进行了修改和调整，最终代码放到工程
   中正常运行没问题了。
2. 在编写State参数配置类的时候，考虑到可以配置多个、多种参数，因此需要用到Array或
   者List。读取参数的逻辑主要是通过下标从数组中取值，并不会频繁插入和删除数据，
   最终决定用Array，因为Array的优点是：在内存中是连续存储的，所以它的索引速度是
   非常的快，而且赋值与修改元素也很简单。为了谨慎也好奇两种数据结构性能差多少，
   我对List和Array做了简单的性能测试，分别做了10W、100W、1000W次访问数据， Array
   的耗时是List的一半左右。我们平时写代码的时候还是要重视性能问题，选择正确的数
   据结构和算法对性能提升有较大的帮助。

  
* 2020-7-20 To 2020-7-24 Week Report

本周工作：
1. 重构ufps的底层，发现插件太复杂，改不动，新建了一个分支，换成了LowPolyFPS插件。
   【进度：100%】
2. 实现摄像机锁定目标对象功能。【进度：100%】
3. 实现武器基础的伤害逻辑。【进度：100%】
4. 重构玩家输入逻辑，整理成统一管理的方式。【进度：100%】
5. 重构角色控制逻辑，并且实现第三人称的角色移动控制。【进度：100%】

下周工作：
1. 定位并修复摄像机在某些情况锁定目标对象时抖动问题。
2. 定位并修复第三人称AI的子弹出生位置错误问题。
3. 实现Layer统一管理功能。
4. 研究IK使用方法，并且在角色上用上IK。
5. 帮忙解决组员遇到的技术问题。

本周心流：
1. 项目一开始用的插件是UFPS，这个插件刚下载下来的时候，我简单的体验了一下demo的功能，
   当时感觉插件的功能很成熟和完整，想着站在巨人的肩膀上开发应该能缩短开发周期。
   后来想重构和调整功能，在修改的过程中花了比较多的时间去阅读插件的代码，发现想
   改的那部分功能（即底层状态机部分的功能），插件大部分的类都要改一遍，插件本身
   代码量很多，加上有些逻辑没理解透，改不动（也许是我水平不够 囧 ~~(╯﹏╰)~~）。
   我们程序内部讨论，决定换一个轻量的插件LowPolyFPS。发生这样的事情主要是自己的
   问题，当时想着硬着头皮把UFPS的代码啃下来的，积累FPS的经验，没想到翻车了(囧 ~~(╯﹏╰)~~)。
2. 吸取之前的教训，下载LowPolyFPS之后，我认真阅读了这个插件的代码。这个插件代码量
   不多，甚至可以说没有封装，就是为了做demo而快速实现了一些基础的功能，我觉得这样的插件
   比较合适，在这样的简洁的基础上，我们自己实现功能，对我们自己来说进步会更快，代码维护
   起来也会比较轻松。

* 2020-7-27 To 2020-7-31 Week Report

本周工作：
1. 定位并修复摄像机在某些情况锁定目标对象时抖动问题。【进度：100%】
2. 定位并修复第三人称AI的子弹出生位置错误问题。【进度：100%】
3. 实现Layer统一管理功能。【进度：100%】
4. 研究Final IK使用方法，并且在敌方AI上使用。【进度：100%】
5. 开发射击状态的摄像机抖动功能。【进度：100%】
6. 修复多部位伤害机制的Bug。【进度：100%】

下周工作：
1. 替换角色模型和枪械模型
2. 重构角色动画控制逻辑
3. 研究Ragdoll，并在角色上用上Ragdoll
4. 重构声音播放逻辑
5. 帮忙解决组员遇到的技术问题。

本周心流：
1. 经过大家一周的努力，终于把战斗逻辑调通了，加上枪械后座力后，开枪效果好了不
   少，离目标效果还有距离，接下来还要继续优化战斗效果，补充战斗功能。
2. 这周实现了镜头锁定目标的功能，策划同学在使用这个功能的时候反馈了一个问题：
   在一边瞄准一边行走时摄像机会抽搐抖动。我一开始是怀疑是不是镜头坐标和旋转的
   插值出现了问题，我认真做了一些测试，镜头在各种情况下是正常并顺畅过渡的，
   问题应该是别的逻辑导致的。我发现出现抖动的情况是出现在自动寻路的情况下，
   我想应该是Unity的寻路组件在寻路的过程中自动把角色的正朝向往移动方向调整，
   跟瞄准锁定的逻辑冲突了。最后解决办法是：在锁定瞄准的状态下，把寻路组件的
   updateRotation设置为false。
3. 组员提出了个问题：敌人只有根节点有刚体组件，当角色发送射线检测敌人哪个部位暴
   露时，在碰撞检测回调中都是返回了根节点，无法判断敌人哪个部位暴露。我给的
   建议是：反向发射线，也就是从敌人的各个部位发送射线给角色，这样就暂时解决了
   这个问题。

* 2020-8-03 To 2020-8-07 Week Report

本周工作：
1. 研究Ragdoll，并在角色上用上Ragdoll。【进度：100%】
2. 扩展Transform编辑器功能。【进度：100%】
3. 开发人物动画控制逻辑。【进度：100%】
4. 开发弹痕播放和配置功能。【进度：100%】
5. 替换角色和敌人资源。【进度：100%】
6. 子弹击中检测改为使用射线检测的方式。【进度：100%】

下周工作：
1. 战斗中的背包功能。
2. 战斗中音效播放功能重构。
3. 摄像机瞄准朝向功能。
4. 帮忙解决组员遇到的技术问题。

 本周心流：
1. 平时用Unity时经常会需要把某个对象的坐标或者旋转赋给另外一个对象又或者
   重置坐标旋转等，而Unity编辑器自身不带这几个快捷功能，我想起以前项目也经常用到
   这几个快捷功能，于是就通过编辑器扩展的方式实现了这个快捷工具。为了保留Unity
   Inspector的基础界面，需要通过反射的方式调用TransformInspector的方法。
2. 我们在开发项目中考虑到配置便捷需要开发一些编辑器工具，最近网上了解到一个能够
   提高开发编辑器工具的插件Odin，这个插件也比较美观，自带了一些功能，通过给Field加上
   Attribute就可以有编辑器功能了。插件比较成熟，网上教程也比较多，推荐使用。

* 2020-8-10 To 2020-8-14 Week Report

本周工作：
1. 开发战斗中的背包功能。【进度：100%】
2. 测试Generic动画使用是否有问题，研究握枪手部IK。【进度：100%】
3. 修复角色、AI不着地的Bug。【进度：100%】
4. 开发音效统一管理类。【进度：100%】
5. 换枪功能开发。【进度：100%】
6. 补充霰弹枪子弹射击逻辑。【进度：100%】
7. 修复玩家无法主动开枪逻辑Bug。【进度：100%】
8. 开发摄像机震动功能。【进度：100%】

下周工作：
1. 开发方便策划调试的战斗测试功能。
2. 敌人IK统一改为使用FinalIK。
3. 制定角色节点规范，并开发角色配置工具，方便配置。
4. 帮忙解决组员遇到的技术问题。

本周心流：
1. 本周开发了一个小工具，把坐标、旋转、缩放拷贝到系统剪切板，方便后面配表或者平
   时记录对象信息用。实现这个功能只要把坐标、旋转这些信息转成字符串赋给
   UnityEngine.GUIUtility.systemCopyBuffer对象就行了。
2. 本周替换了人物资源，因为角色的动画用的不是人型动画，所以在配置IK的时候要一个
   个骨骼点设置，效率比较低。骨骼名字有固定的命名规则，可以写工具自动配置。
   在方便配置这方面，后面需要重视自动化配置，开发一些工具体高配置效率。

* 2020-8-17 To 2020-8-21 Week Report
本周工作：
1. 补充枪械中的摄像机抖动参数逻辑。【进度：100%】
2. 战前准备UI接入战斗的换枪逻辑。【进度：100%】
3. 开发方便策划调试的战斗测试功能。【进度：100%】
4. 实现最后击杀触发子弹时间。【进度：100%】
5. 开发攻击目标Layer设置，区分敌人和玩家的攻击目标，解决敌人可以攻击敌人的问题。【进度：100%】
6. 补充第一人称转身手臂摇摆功能。【进度：100%】

下周工作：
1. 使用布娃娃插件PuppetMaster来代替Unity自带的Ragdoll，优化死亡效果。
2. 引进对象池管理弹孔特效。
3. 帮忙优化战斗效果。
4. 帮忙解决组员遇到的技术问题。

本周心流：
1. 敌人死亡倒地我们用的是布娃娃系统，之前用的是Unity的默认参数配置，效果不太好。
   这周花了些时间了解了下Unity自带的Ragdoll，想着看能不能调好参数提升下效果。
   Unity的Ragdoll主要是通过CharacterJoint来连接各个关节，启用Ragdoll的时候把角色
   的Animator禁用就可以了。调效果主要也是调CharacterJoint上的参数，在网上找了一
   圈，没找到很好教程，自己尝试调了下参数，没有达到效果。
2. 网上搜索了一些插件，发现有个布娃娃系统插件PuppetMaster评价蛮高，下载下来试用
   看了下效果，觉得效果还不错，插件也比较成熟，使用和参数调整比较方便，下周加到
   工程里面看看具体效果。

* 2020-8-24 To 2020-8-28 Week Report
本周工作：
1. 第一人称的手作为摄像机的子节点挂在摄像机下面，为了避免手的后坐力不影响摄像机。
   【进度：100%】
2. 摄像机拆分机瞄和腰射两种相对偏移参数。【进度：100%】
3. 修复非瞄准状态下的散射错误的问题。【进度：100%】
4. 布娃娃系统替换成PuppetMaster，效果比unity自带的Ragdoll好不少。【进度：100%】
5. 优化子弹时间效果。【进度：100%】
6. 摄像机拆分腰射和机瞄两套跟随参数。【进度：100%】
7. 敌人受击动作使用IK来实现。【进度：100%】
8. 替换敌人人物动画文件后重新配置IK和布娃娃系统参数。【进度：100%】
9. 枪械参数上增加摄像机偏移参数配置。【进度：100%】
10. 修复了行为树获取当前武器失败的Bug。【进度：100%】

下周工作：
1. 开发被攻击时的屏幕震动功能。
2. 开发区分攻击敌人头部和其他部位不同的喷血反馈。
3. 开发高速跑动的屏幕震动功能。
4. 开发区分攻击敌人头部和其他部位不同的死亡效果。

本周心流：
1. 收到反馈说战斗比较卡，检查了下DrawCall，发现场景没有合并DrawCall，DrawCall峰
   值比较高， 有500多DC，因为还在开发demo阶段，美术规范还没制定，后面指定规范后
   DrawCall应该不会有这么高。我观察了场景有比较多的建筑物，建筑之间的遮挡比较多，
   这种情况比较适合使用Unity的Occlusion Culling（遮挡剔除）。我用Unity的
   Occlusion Culling（遮挡剔除）来烘焙场景，在实际战斗过程中DrawCall降到了200多。
2. 本周又替换人物动画，因为当前处于开发demo阶段，有比较多的工具没有开发。这次是
   人手替换资源重新配置的，有大量的参数需要拷贝和配置，导致每次替换资源时都要人
   手配置，效率较低而且容易出错，后续需要安排开发配置工具，提高效率和降低出错率。

* 2020-8-31 To 2020-9-4 Week Report
本周工作：
1. 实现读取ShadowMask功能，弹孔根据ShadowMask的值调整亮度。【进度：100%】
2. 修复子弹时间过程中DOTween不受timeScale影响导致人物播放动画的问题。【进度：100%】
3. 修复角色锁定和非锁定状态切换导致镜头抖动的问题。【进度：100%】
4. 优化敌人受击效果，主要调整了IK参数。【进度：100%】
5. 播放完子弹时间后角色还继续寻路的问题，导致角色模型穿帮。【进度：100%】
6. 击中敌人身体和头部区分实现不同的死亡效果。【进度：100%】
7. 开枪状态下，受击不用播放镜头抖动。【进度：100%】
8. 修复弹道特效朝向不对的问题。【进度：100%】
9. 修复左手握枪IK位置不对的问题。【进度：100%】
10. 霰弹枪上子弹镜头抖动功能。【进度：100%】
11. 开发战斗前开场动画功能。【进度：100%】

下周工作：
1. 补充高速跑动的震屏功能。
2. 指定角色的结构规范。
3. 开发角色配置工具。
4. 帮忙解决组员遇到的技术问题。

本周心流：
1. 本周跟美术一起查一个很奇怪的问题，在我们项目的工程里面，场景的光照比较暗。新
   建一个新的unity工程，同样的场景和配置比我们项目里面的效果看起来要亮。我们检查
   了各种配置，都是一致的。后来我用Unity的FrameDebugger查看灯光强度，发现传到
   Shader中的灯光强度确实是弱了，像是做了Gamma转Linear的操作，猜测应该是某个配置
   项导致的，Unity编辑器菜单上能想到的配置都尝试了，还是没有找到。最后尝试了下把
   新建的工程的配置文件拷贝覆盖我们项目工程的配置文件，效果是正常了。通过用svn文
   件对比工具发现我们项目的GraphicsSettings.asset里面的配置项
   m_LightsUseLinearIntensity=1， 新建项目的这个值是0，可以确定就是因为这个配置
   项导致的光照不对。unity是通过GraphicsSettings.lightsUseLinearIntensity这个API去设
   置这个配置项的，可能是某个插件设置了，我们之前一直没有发现。

* 2020-9-7 To 2020-9-11 Week Report
本周工作：
1. 战斗测试工具支持切换场景。 【进度：100%】
2. 战斗测试支持手动操作角色（手机端）。 【进度：100%】
3. 加入导表工具（支持把excel转成lua）。 【进度：100%】
4. 开发伤害数值底层，把伤害计算逻辑放在lua层。 【进度：50%】

下周工作：
1. 继续开发伤害数值底层，把伤害计算逻辑放在lua层。
2. 开发技能数值底层。
3. 帮忙解决组员遇到的技术问题。


本周心流：
1. 这周开始逐渐补充数值方面的功能，之前赶着做demo，把大部分战斗逻辑写在了C#层，
   考虑到后面能够方便热更新功能和修复bug，打算把一些战斗逻辑移植到Lua层。目前
   已经在逐步把伤害计算、事件等功能移植到Lua，后面会尽量把其它的逻辑用Lua开发。

* 2020-9-14 To 2020-9-18 Week Report
本周工作：
1. 制定角色、敌人、武器等属性配置表。 【进度：100%】
2. 在战斗加载流程中补充角色的属性赋值。 【进度：100%】
3. 在战斗加载流程中补充枪械的属性赋值。 【进度：100%】
4. 实现枪械穿透物体功能。【进度：100%】
5. 实现枪械僵直效果。【进度：100%】
6. 实现枪械普通攻击伤害计算和暴击伤害计算【进度：100%】

下周工作：
1. 实现爆炸伤害计算。
2. 实现近战伤害计算（暂时没有近战的功能，需写个代码测试功能）。
3. 开发资源顶点数、贴图数量统计工具。

本周心流：
1. 在开发枪械伤害计算时，需要计算子弹穿透物体后的伤害衰减值，我们是用普通射线来判断
   子弹是否击中了目标，但是普通射线Physics.Raycast只能返回第一个碰到的物体，碰撞
   体后面的物体无法检测到。使用Physics.RaycastAll能返回所有碰到的物体，但是需要
   对返回的RaycastHit[]进行距离排序，判断最靠近射线起点的是否可穿透墙体。我思考
   了一种方案：子弹起点位置用Physics.Raycast发射线做子弹射击检测，检测到击中物体
   后，在第一个击中点的位置再用Physics.Raycast往前发射线继续做子弹检测。这样能比
   较容易知道第一个击中物和第二个击中物分别是什么，根据物品类型和击中距离来计算
   伤害衰减，这种发射两条射线的方法也省去了排序的步骤。

* 2020-9-21 To 2020-9-25 Week Report
本周工作：
1. 实现爆炸伤害计算。
2. 实现近战伤害计算。
3. 开发资源顶点数、贴图数量统计工具。
