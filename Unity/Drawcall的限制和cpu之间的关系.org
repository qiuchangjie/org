* Drawcall 的限制和 cpu 之间的关系

- Fps 是指游戏运行时的帧率，表示每秒要绘制多少帧，一般要让游戏保持肉眼可见的流畅度需要保持在 30 帧以上，而每帧可能会有多次渲染，（cpu 告诉 GPU 场景中需要渲染哪些物件，物件的材质，顶点，图片等信息，即一次 Drawcall），Batches 代表每帧有多少次 Drawcall（即渲染多少次）。
- NVIDIA 在 GDC 曾提出，25K batchs/sec 会吃满 1GHz 的 CPU，100 的使用率。所以他们推出了一条公式，来预估游戏中大概可以 Run 多少个 Batch：

[[file:pictures/fps_drawcall.jpg]]

- 举个例子：如果你的目标是游戏跑 30FPS、使用 2GHz 的 CPU、20%的工作量拨给 Draw Call 来使用，那你每帧可以有多少 Draw Call 呢？
333 Batchs/Frame = 25K * 2 * (0.2/30)
- 假设在 800Mhz 的 iTouch5 中，如果目标游戏跑 30fps，cpu 20%的工作量拨给 drawcall，那么可以有多少 drawcall 呢？  
25k*0.8*(0.2/30)=133.3.
在 iTouch5 上实际测试数据：
Drawcall                                                CPU
4                                                                23%
5                                                                23%
6                                                                23%--24%
7                                                                24%
8                                                                24%
9                                                                24%--25%
10                                                                24%--25%
11                                                                25%
12                                                                25%
52                                                                34%
68                                                                37%
100                                                                44%
370                                                                100%
- 从上面数据可以得到：在 30fps 的游戏中没 1%的 CPU 使用率大概能承载 4.6 左右的 drawcall（370-4）/（100-23）=4.7.就是说 20%的 cpu 大概能够承载 20*4.6=95 的 DrawCall。理论数据 2Ghz 与 0.8GHz 相差 2.56 倍，333/2.56=130 的 drawCall，实际测试数据大概值为 95（因为 CPU 占用率的值并不是稳定的，所以取相对比较稳定的值作为概值）。另外在 Unity 发布的 App 中可能会有其他因素影响到 CPU 的工作状态，所以认为该公式的计算结果可以作为性能边界的估值，并不是精确值。
- IPhone6 的 CPU 频率为 1.4Ghz，所以游戏跑 30fps，20%的 CPU 使用，每帧可以跑的 DrawCall数为：25k*1.4*(0.2/30)=233。（概值）
 
